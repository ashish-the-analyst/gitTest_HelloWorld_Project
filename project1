import java.io.File;
import java.io.FileNotFoundException;
import java.util.*;

public class ProgProj6 {

    static final boolean DEBUG = false; // make this false before submitting

    public static void main(String[] args) {
        String fileName = "logfile1.txt"; // the fileName should come from the command line arguments

        String[] lines = readLinesFromFile(fileName);
        if (lines == null) {
            System.out.println("The file was not found.");
        }


       // print out each line of the file to confirm program reads file properly
       // you should make the DEBUG flag false before you submit
        if (DEBUG) {
            for (String line : lines) {
                System.out.println(line);
            }
        }

        String result = findHttpResponseCountByCountry(lines);
        System.out.println("\nHTTP RESPONSE CODES BY COUNTRY: ");
        System.out.println(result);

        calculateOSCount(lines);
        
        findLongestElapsedTime(lines);


    }
        public static String findHttpResponseCountByCountry(String[] lines) {
            int US = 0;
            int IE = 0;
            int FR = 0;
            String result = "";
           for (String line : lines) {
               String[] data = line.split("\\|");


            if (data[2].equals("US") && data[3].equals("200")) {
                US++;
            }
            if (data[2].equals("IE") && data[3].equals("404")) {
                IE++;
            }
            if (data[2].equals("FR") && data[3].equals("500")) {
                FR++;
            }
            
            
        }
            result = result + "\nHTTP 200 Responses for US: " + US;
            result = result+ "\nHTTP 404 Responses for IE: " + IE;
            result = result+ "\nHTTP 500 Responses for FR: " + FR;
            return result;
        }


        public static void calculateOSCount (String[] lines) {
            int W = 0;
            int M = 0;
            int L = 0;
            int i = 0;
            int A = 0;
            int U = 0;

            for (String line : lines) {
                String[] data = line.split("\\|");

                if (data[9].equals("OS:W")) {
                    W++;
                }
                if (data[9].equals("OS:M")) {
                    M++;
                }
                if (data[9].equals("OS:L")) {
                    L++;
                }
                if (data[9].equals("OS:i")) {
                    i++;
                }
                if (data[9].equals("OS:A")) {
                    A++;
                }
                if (data[9].equals("OS:U")) {
                    U++;
                }
            }
            System.out.println("\nREQUEST COUNTS BY OPERATING SYSTEM: ");
            System.out.println("Windows: " + W);
            System.out.println("Mac: " + M);
            System.out.println("Linux: " + L);
            System.out.println("iOS: " + i);
            System.out.println("Android: " + A);
            System.out.println("Unknown: " + U);

        }

        public static void findLongestElapsedTime(String[] lines){

            ArrayList<Integer> listOfTime = new ArrayList(); // storing time in list. // only storing Integers.

            for (String line : lines) {

                String[] data = line.split("\\|");

                int time = Integer.parseInt((data[8].split(":")[1]));

                listOfTime.add(time);

            }
            Collections.sort(listOfTime);
            int longestTime = listOfTime.get(listOfTime.size() - 1);
            System.out.println("Longest Elapsed Time: "+longestTime);

            for (String line : lines) {

                String[] data = line.split("\\|");

                int time = Integer.parseInt((data[8].split(":")[1]));
                if (time == longestTime) {
                    System.out.println("Date/Time: " + data[0]);
                    System.out.println("IP Address: " + data[1]);
                    System.out.println("URL: " + data[7]);
                    System.out.println("Content Length in Bytes: " + data[5].split(":")[1]);
                    System.out.println("User: " + data[10].split(";")[1].split("=")[1]);

                }
            }
        }


        // implement your other methods here


        /**
         * Utility method that will read the file provided and parse into an array of Strings
         *
         * Note: the file should be placed under the top level folder of your project
         * See the 'Files' tab on the left.  If your project is called 'week6' then
         * the logfile1.txt, logfile2.txt and logfile3.txt files should be placed under week6 at the same level as src
         * e.g. week6/logfile1.txt
         *
         * @return String[] - array of Strings - one String per line from the file.
         */
        public static String[] readLinesFromFile (String fileName){
            List<String> lines = new ArrayList<>();
            // create a File object based on the fileName provided
            File file = new File(fileName);
            try {
                Scanner scanner = new Scanner(file); // use the file instead of the keyboard for input
                // go through each line of the file
                while (scanner.hasNextLine()) {
                    String line = scanner.nextLine();
                    lines.add(line); // add each line to a list
                }
            } catch (FileNotFoundException ex) {
                // something went wrong with the file.
                System.out.println(ex.getMessage());
                return null;
            }
            // convert the list to an array of Strings and return it
            String[] arrayOfLines = lines.toArray(new String[0]);
            return arrayOfLines;
        }
    }
